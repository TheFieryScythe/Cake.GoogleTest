<wpf:ResourceDictionary xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xml:space="preserve">
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOR/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOREACH/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_IFELSE/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_WHILE/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/LOCAL_FUNCTION_BODY/@EntryValue">ExpressionBody</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_BINARY_EXPRESSIONS_CHAIN/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_STATEMENT_CONDITIONS/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGNMENT_TAB_FILL_STYLE/@EntryValue">USE_TABS_ONLY</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/EMPTY_BLOCK_STYLE/@EntryValue">TOGETHER_SAME_LINE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_RAW_LITERAL_STRING/@EntryValue">INDENT</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_STYLE/@EntryValue">Tab</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/OUTDENT_STATEMENT_LABELS/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ACCESSORHOLDER_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">NEVER</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">NEVER</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/STICK_COMMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_AFTER_DECLARATION_LPAR/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_BINARY_PATTERN_OP/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_FIRST_TYPE_PARAMETER_CONSTRAINT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_PRIMARY_CONSTRUCTOR_DECLARATION_LPAR/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_CHAINED_BINARY_EXPRESSIONS/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_CHAINED_BINARY_PATTERNS/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_EXTENDS_LIST_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_LINES/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_PARAMETERS_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/XmlDocFormatter/INDENT_STYLE/@EntryValue">Tab</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpFileLayoutPatterns/Pattern/@EntryValue">&lt;Patterns xmlns="urn:schemas-jetbrains-com:member-reordering-patterns"&gt;
	&lt;TypePattern DisplayName="Non-reorderable types" Priority="99999999"&gt;
		&lt;TypePattern.Match&gt;
			&lt;Or&gt;
				&lt;And&gt;
					&lt;Kind Is="Interface" /&gt;
					&lt;Or&gt;
						&lt;HasAttribute Name="System.Runtime.InteropServices.InterfaceTypeAttribute" /&gt;
						&lt;HasAttribute Name="System.Runtime.InteropServices.ComImport" /&gt;
					&lt;/Or&gt;
				&lt;/And&gt;
				&lt;Kind Is="Struct" /&gt;
				&lt;HasAttribute Name="System.Runtime.InteropServices.StructLayoutAttribute" /&gt;
				&lt;HasAttribute Name="JetBrains.Annotations.NoReorderAttribute" /&gt;
			&lt;/Or&gt;
		&lt;/TypePattern.Match&gt;
	&lt;/TypePattern&gt;

	&lt;TypePattern DisplayName="xUnit.net Test Classes" RemoveRegions="All"&gt;
		&lt;TypePattern.Match&gt;
			&lt;And&gt;
				&lt;Kind Is="Class" /&gt;
				&lt;HasMember&gt;
					&lt;And&gt;
						&lt;Kind Is="Method" /&gt;
						&lt;HasAttribute Name="Xunit.FactAttribute" Inherited="True" /&gt;
						&lt;HasAttribute Name="Xunit.TheoryAttribute" Inherited="True" /&gt;
					&lt;/And&gt;
				&lt;/HasMember&gt;
			&lt;/And&gt;
		&lt;/TypePattern.Match&gt;

		&lt;Entry DisplayName="Fields"&gt;
			&lt;Entry.Match&gt;
				&lt;And&gt;
					&lt;Kind Is="Field" /&gt;
					&lt;Not&gt;
						&lt;Static /&gt;
					&lt;/Not&gt;
				&lt;/And&gt;
			&lt;/Entry.Match&gt;
		&lt;/Entry&gt;

		&lt;Entry DisplayName="Constructors"&gt;
			&lt;Entry.Match&gt;
				&lt;Kind Is="Constructor" /&gt;
			&lt;/Entry.Match&gt;

			&lt;Entry.SortBy&gt;
				&lt;Static/&gt;
			&lt;/Entry.SortBy&gt;
		&lt;/Entry&gt;

		&lt;Entry DisplayName="Teardown Methods"&gt;
			&lt;Entry.Match&gt;
				&lt;And&gt;
					&lt;Kind Is="Method" /&gt;
					&lt;ImplementsInterface Name="System.IDisposable" /&gt;
				&lt;/And&gt;
			&lt;/Entry.Match&gt;
		&lt;/Entry&gt;

		&lt;Entry DisplayName="All other members" /&gt;

		&lt;Entry DisplayName="Test Methods" Priority="100"&gt;
			&lt;Entry.Match&gt;
				&lt;And&gt;
					&lt;Kind Is="Method" /&gt;
					&lt;HasAttribute Name="Xunit.FactAttribute" Inherited="false" /&gt;
					&lt;HasAttribute Name="Xunit.TheoryAttribute" Inherited="false" /&gt;
				&lt;/And&gt;
			&lt;/Entry.Match&gt;
		&lt;/Entry&gt;
	&lt;/TypePattern&gt;

	&lt;TypePattern DisplayName="NUnit Test Fixtures" RemoveRegions="All"&gt;
		&lt;TypePattern.Match&gt;
			&lt;And&gt;
				&lt;Kind Is="Class" /&gt;
				&lt;Or&gt;
					&lt;HasAttribute Name="NUnit.Framework.TestFixtureAttribute" Inherited="true" /&gt;
					&lt;HasAttribute Name="NUnit.Framework.TestFixtureSourceAttribute" Inherited="true" /&gt;
					&lt;HasMember&gt;
						&lt;And&gt;
							&lt;Kind Is="Method" /&gt;
							&lt;HasAttribute Name="NUnit.Framework.TestAttribute" Inherited="false" /&gt;
							&lt;HasAttribute Name="NUnit.Framework.TestCaseAttribute" Inherited="false" /&gt;
							&lt;HasAttribute Name="NUnit.Framework.TestCaseSourceAttribute" Inherited="false" /&gt;
						&lt;/And&gt;
					&lt;/HasMember&gt;
				&lt;/Or&gt;
			&lt;/And&gt;
		&lt;/TypePattern.Match&gt;

		&lt;Entry DisplayName="Setup/Teardown Methods"&gt;
			&lt;Entry.Match&gt;
				&lt;And&gt;
					&lt;Kind Is="Method" /&gt;
					&lt;Or&gt;
						&lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" Inherited="true" /&gt;
						&lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" Inherited="true" /&gt;
						&lt;HasAttribute Name="NUnit.Framework.TestFixtureSetUpAttribute" Inherited="true" /&gt;
						&lt;HasAttribute Name="NUnit.Framework.TestFixtureTearDownAttribute" Inherited="true" /&gt;
						&lt;HasAttribute Name="NUnit.Framework.OneTimeSetUpAttribute" Inherited="true" /&gt;
						&lt;HasAttribute Name="NUnit.Framework.OneTimeTearDownAttribute" Inherited="true" /&gt;
					&lt;/Or&gt;
				&lt;/And&gt;
			&lt;/Entry.Match&gt;
		&lt;/Entry&gt;

		&lt;Entry DisplayName="All other members" /&gt;

		&lt;Entry DisplayName="Test Methods" Priority="100"&gt;
			&lt;Entry.Match&gt;
				&lt;And&gt;
					&lt;Kind Is="Method" /&gt;
					&lt;HasAttribute Name="NUnit.Framework.TestAttribute" Inherited="false" /&gt;
					&lt;HasAttribute Name="NUnit.Framework.TestCaseAttribute" Inherited="false" /&gt;
					&lt;HasAttribute Name="NUnit.Framework.TestCaseSourceAttribute" Inherited="false" /&gt;
				&lt;/And&gt;
			&lt;/Entry.Match&gt;
		&lt;/Entry&gt;
	&lt;/TypePattern&gt;

	&lt;TypePattern DisplayName="Default Pattern"&gt;
		&lt;Entry DisplayName="Public Delegates" Priority="100"&gt;
			&lt;Entry.Match&gt;
				&lt;And&gt;
					&lt;Access Is="Public" /&gt;
					&lt;Kind Is="Delegate" /&gt;
				&lt;/And&gt;
			&lt;/Entry.Match&gt;
		&lt;/Entry&gt;

		&lt;Entry DisplayName="Public Enums" Priority="100"&gt;
			&lt;Entry.Match&gt;
				&lt;And&gt;
					&lt;Access Is="Public" /&gt;
					&lt;Kind Is="Enum" /&gt;
				&lt;/And&gt;
			&lt;/Entry.Match&gt;
		&lt;/Entry&gt;

		&lt;Entry DisplayName="Properties, Indexers"&gt;
			&lt;Entry.Match&gt;
				&lt;Or&gt;
					&lt;Kind Is="Property" /&gt;
					&lt;Kind Is="Indexer" /&gt;
				&lt;/Or&gt;
			&lt;/Entry.Match&gt;
		&lt;/Entry&gt;

		&lt;Entry DisplayName="Static Fields and Constants"&gt;
			&lt;Entry.Match&gt;
				&lt;Or&gt;
					&lt;Kind Is="Constant" /&gt;
					&lt;And&gt;
						&lt;Access Is="Public" /&gt;
						&lt;Kind Is="Field" /&gt;
						&lt;Static /&gt;
					&lt;/And&gt;
				&lt;/Or&gt;
			&lt;/Entry.Match&gt;

			&lt;Entry.SortBy&gt;
				&lt;Kind&gt;
					&lt;Kind.Order&gt;
						&lt;DeclarationKind&gt;Constant&lt;/DeclarationKind&gt;
						&lt;DeclarationKind&gt;Field&lt;/DeclarationKind&gt;
					&lt;/Kind.Order&gt;
				&lt;/Kind&gt;
			&lt;/Entry.SortBy&gt;
		&lt;/Entry&gt;

		&lt;Entry DisplayName="Fields"&gt;
			&lt;Entry.Match&gt;
				&lt;And&gt;
					&lt;Access Is="Public" /&gt;
					&lt;Kind Is="Field" /&gt;
					&lt;Not&gt;
						&lt;Static /&gt;
					&lt;/Not&gt;
				&lt;/And&gt;
			&lt;/Entry.Match&gt;
		&lt;/Entry&gt;

		&lt;Entry DisplayName="Constructors"&gt;
			&lt;Entry.Match&gt;
				&lt;Kind Is="Constructor" /&gt;
			&lt;/Entry.Match&gt;

			&lt;Entry.SortBy&gt;
				&lt;Static/&gt;
			&lt;/Entry.SortBy&gt;
		&lt;/Entry&gt;

		&lt;Entry DisplayName="Interface Implementations" Priority="100"&gt;
			&lt;Entry.Match&gt;
				&lt;And&gt;
					&lt;Kind Is="Member" /&gt;
					&lt;ImplementsInterface /&gt;
				&lt;/And&gt;
			&lt;/Entry.Match&gt;

			&lt;Entry.SortBy&gt;
				&lt;ImplementsInterface Immediate="true" /&gt;
			&lt;/Entry.SortBy&gt;
		&lt;/Entry&gt;

		&lt;Entry DisplayName="All other members" /&gt;

		&lt;Entry DisplayName="Fields"&gt;
			&lt;Entry.Match&gt;
				&lt;And&gt;
					&lt;Not&gt;
						&lt;Access Is="Public" /&gt;
					&lt;/Not&gt;
					&lt;Kind Is="Field" /&gt;
					&lt;Not&gt;
						&lt;Static /&gt;
					&lt;/Not&gt;
				&lt;/And&gt;
			&lt;/Entry.Match&gt;
		&lt;/Entry&gt;

		&lt;Entry DisplayName="Static Fields and Constants"&gt;
			&lt;Entry.Match&gt;
				&lt;Or&gt;
					&lt;Kind Is="Constant" /&gt;
					&lt;And&gt;
						&lt;Not&gt;
							&lt;Access Is="Public" /&gt;
						&lt;/Not&gt;
						&lt;Kind Is="Field" /&gt;
						&lt;Static /&gt;
					&lt;/And&gt;
				&lt;/Or&gt;
			&lt;/Entry.Match&gt;

			&lt;Entry.SortBy&gt;
				&lt;Kind&gt;
					&lt;Kind.Order&gt;
						&lt;DeclarationKind&gt;Constant&lt;/DeclarationKind&gt;
						&lt;DeclarationKind&gt;Field&lt;/DeclarationKind&gt;
					&lt;/Kind.Order&gt;
				&lt;/Kind&gt;
			&lt;/Entry.SortBy&gt;
		&lt;/Entry&gt;

		&lt;Entry DisplayName="Nested Types"&gt;
			&lt;Entry.Match&gt;
				&lt;Kind Is="Type" /&gt;
			&lt;/Entry.Match&gt;
		&lt;/Entry&gt;
	&lt;/TypePattern&gt;
&lt;/Patterns&gt;
</s:String></wpf:ResourceDictionary>